{"version":3,"sources":["components/EnterTask.js","components/EachTask.js","components/IncompleteTasksWrapper.js","components/CompletedTasksWrapper.js","components/App.js","index.js"],"names":["EnterTask","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","taskName","acceptingTask","bind","assertThisInitialized","readingTask","_this2","fetch","method","body","JSON","stringify","taskname","tasknotes","completed","headers","Content-Type","then","response","json","updateTasks","_id","createdTask","setState","event","target","value","react_default","a","createElement","type","placeholder","onChange","onClick","React","Component","EachTask","isDisabled","taskData","task","taskNotesData","isHidden","displayNotes","edit","enableEditing","toggleTask","editing","deleteTask","addNotes","saveNotes","fetchCall","bodyOfRequest","action","Id","arguments","length","undefined","console","log","reInitializeTasks","taskId","className","disabled","style","display","TasksIncomplete","tasksToBeRendered","Tasks","map","components_EachTask","key","TasksCompleted","App","tasks","tasksFromDB","toConsumableArray","concat","modifiedTask","flag","tasksCopy","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","splice","indexOf","assign","err","return","incompleteTasks","completedTasks","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","push","id","components_EnterTask","IncompleteTasksWrapper","CompletedTasksWrapper","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.eabe6eeb.chunk.js","sourcesContent":["import React from 'react'\n\nclass EnterTask extends React.Component {\n  constructor (props) {\n    super (props)\n    this.state = {\n      taskName : ''\n    }\n    this.acceptingTask = this.acceptingTask.bind(this)\n    this.readingTask = this.readingTask.bind(this)\n  }\n\n  acceptingTask () {\n    fetch('http://localhost:5000/tasks/', {\n      method: \"POST\",\n      body: JSON.stringify({taskname:this.state.taskName, tasknotes:'', completed:false}),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(response => response.json())\n      .then(json => {\n      this.props.updateTasks({taskname:this.state.taskName, tasknotes:'', _id:json.createdTask._id, completed:false})\n      this.setState ({\n        taskName : ''\n      })\n    })\n  }\n\n  readingTask (event) {\n    this.setState ({\n      taskName : event.target.value\n    })\n  }\n\n  render () {\n    return (\n      <div>\n      <input type=\"text\" placeholder=\"Add Task and Stop Procrastinating\" value={this.state.taskName} onChange={this.readingTask}/>\n      <button onClick={this.acceptingTask}>&#10010;</button>\n      </div>\n    )\n  }\n}\n\nexport default EnterTask\n","import React from 'react'\n\nclass EachTask extends React.Component {\n  constructor (props) {\n    super (props) // Class components should always call the base constructor with props.\n    this.state = {\n      isDisabled : true,\n      taskData : this.props.task.taskname,\n      taskNotesData : this.props.task.tasknotes,\n      isHidden : true,\n      displayNotes : 'none',\n      edit : '\\u270E',\n    }\n    this.enableEditing = this.enableEditing.bind(this)\n    this.toggleTask = this.toggleTask.bind(this)\n    this.editing = this.editing.bind(this)\n    this.deleteTask = this.deleteTask.bind(this)\n    this.addNotes = this.addNotes.bind(this)\n    this.saveNotes = this.saveNotes.bind(this)\n    this.fetchCall = this.fetchCall.bind(this)\n  }\n\n  fetchCall(bodyOfRequest, action, Id = '') {\n    fetch('http://localhost:5000/tasks/' + Id, {\n      method: action,\n      body: bodyOfRequest,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then( response => response.json())\n      .then(\n        json => {\n          console.log(json)\n          this.props.reInitializeTasks(this.props.task, action==\"DELETE\")\n        }\n      )\n  }\n\n  enableEditing () {\n    this.setState({\n      isDisabled : !this.state.isDisabled\n    })\n  }\n\n  editing (event) {\n    this.setState ({\n      taskData : event.target.value\n    })\n    this.props.task.taskname = event.target.value //never hardcode urls\n    this.fetchCall(JSON.stringify({'taskname': this.props.task.taskname}), \"POST\",this.props.taskId)\n  }\n\n  toggleTask () {\n    this.props.task.completed = !this.props.task.completed\n    this.fetchCall(JSON.stringify({'completed': this.props.task.completed}), \"POST\",this.props.taskId)\n  }\n\n  deleteTask () {\n    this.fetchCall(JSON.stringify({taskId:this.props.taskId}), \"DELETE\")\n  }\n\n  addNotes () {\n    if( this.state.isHidden ) {\n      this.setState ({\n        displayNotes : ''\n      })\n    }\n    else {\n      this.setState ({\n        displayNotes : 'none'\n      })\n    }\n    this.setState ({\n      isHidden : !this.state.isHidden\n    })\n    //Ternary\n  }\n\n  saveNotes (event) {\n    this.setState ({\n      taskNotesData : event.target.value\n    })\n    this.props.task.tasknotes = event.target.value\n    this.fetchCall(JSON.stringify({'tasknotes': this.props.task.tasknotes}), \"POST\", this.props.taskId) //Change id\n  }\n\n  render () {\n    return (\n      <div className=\"container\">\n      <input type=\"text\" value={this.state.taskData} onChange={this.editing} disabled={this.state.isDisabled}/>\n      <button onClick={this.enableEditing}>&#9998;</button>\n      <button onClick={this.addNotes}>&#128221;</button>\n      <textarea placeholder=\"Your Notes Here...\" value={this.state.taskNotesData} onChange={this.saveNotes} style={{display : this.state.displayNotes}}></textarea>\n      <button onClick={this.toggleTask}>&#10004;</button>\n      <button onClick={this.deleteTask}>&#10006;</button>\n      </div>\n    )\n  }\n}\n\nexport default EachTask\n","import React from 'react'\nimport EachTask from './EachTask.js'\n\nfunction TasksIncomplete(props) {\n  var tasksToBeRendered = props.Tasks.map( function (task) {\n      return (\n        <EachTask task={task} taskId={task._id} key={task._id} reInitializeTasks={props.reInitializeTasks}/>\n      )\n  })\n  return (\n    <div>\n    {tasksToBeRendered}\n    </div>\n  )\n}\n\nexport default TasksIncomplete\n","import React from 'react'\nimport EachTask from './EachTask.js'\n\nfunction TasksCompleted(props) {\n  var tasksToBeRendered = props.Tasks.map( function (task) {\n      return (\n        <EachTask task={task} taskId={task._id} key={task._id} reInitializeTasks={props.reInitializeTasks}/>\n      )\n  })\n  return (\n    <div>\n    {tasksToBeRendered}\n    </div>\n  )\n}\n\nexport default TasksCompleted\n","import React from 'react'\nimport EnterTask from './EnterTask.js'\nimport TasksIncomplete from './IncompleteTasksWrapper.js'\nimport TasksCompleted from './CompletedTasksWrapper.js'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      tasks : [],\n    }\n    this.updateTasks = this.updateTasks.bind(this)\n    this.reInitializeTasks = this.reInitializeTasks.bind(this)\n  }\n\n  componentWillMount() {\n      var tasksFromDB\n      fetch('http://localhost:5000/tasks')\n      .then(\n        response => response.json()\n      )\n      .then(\n        tasksFromDB => {\n          this.setState({\n            tasks : tasksFromDB\n          })\n        }\n      )\n  }\n\n  updateTasks(task) {\n    this.setState({\n      tasks: [...this.state.tasks, task]\n    })\n  }\n\n  reInitializeTasks(modifiedTask, flag = false) {\n    var tasksCopy = [...this.state.tasks]\n    for(let task of tasksCopy) {\n      if(task._id === modifiedTask._id) {\n        if(flag) {\n          tasksCopy.splice(tasksCopy.indexOf(task), 1)\n        }\n        else task = Object.assign({}, modifiedTask)\n        break\n      }\n    }\n    this.setState({\n      tasks : tasksCopy\n    })\n  }\n\n  render() {\n    const incompleteTasks = []\n    const completedTasks = []\n    for(let task of this.state.tasks) {\n      if(!task.completed)  incompleteTasks.push(task)\n      else completedTasks.push(task)\n    }\n\n    return (\n      <div>\n      <div id=\"getTask\">\n      <EnterTask updateTasks={this.updateTasks}/>\n      </div>\n      <div id=\"addedTaskContainer\">\n      <h3>Tasks Yet to be Done! - &darr;</h3>\n      <TasksIncomplete Tasks={incompleteTasks} reInitializeTasks={this.reInitializeTasks}/>\n      </div>\n      <div className=\"vertLine\"></div>\n      <div id=\"completedTaskContainer\">\n      <h3>Completed Tasks... - &darr;</h3>\n      <TasksCompleted Tasks={completedTasks} reInitializeTasks={this.reInitializeTasks}/>\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App.js'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}